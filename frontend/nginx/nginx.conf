server {

  set $cors '';
if ($http_origin ~ '^https?://(localhost|www\.openvitualtours\.org') {
        set $cors 'true';
}

if ($cors = 'true') {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        # required to be able to read Authorization header in frontend
        #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
}

if ($request_method = 'OPTIONS') {
        # Tell client that this pre-flight info is valid for 20 days
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
}

  listen 80;
  listen [::]:80;
  server_name openvirtualtours.org www.openvirtualtours.org;
  root /usr/share/nginx/html;
  
  #react app
  location / {
    try_files $uri /index.html;  
  }

  listen [::]:443 ssl ipv6only=on; 
  listen 443 ssl;
  ssl_certificate /etc/ssl/certs/cert.pem;
  ssl_certificate_key /etc/ssl/private/key.pem;

  #node.js app
  location /api {

    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme

    proxy_pass http://3.225.226.55:4000;   
  }

}

server {
    if ($host = openvirtualtours.org) {
        return 301 https://$host$request_uri;
    }


  listen 80;
  listen [::]:80;
  server_name openvirtualtours.org;
    return 404;

}